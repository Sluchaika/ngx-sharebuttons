{
  "version": 3,
  "file": "ngx-share-core.js",
  "sources": [
    "ng://@ngx-share/core/src/share.module.ts",
    "ng://@ngx-share/core/src/n-formatter.pipe.ts",
    "ng://@ngx-share/core/src/share-button.directive.ts",
    "ng://@ngx-share/core/src/share.service.ts",
    "ng://@ngx-share/core/src/share.prop.ts",
    "ng://@ngx-share/core/src/share.operators.ts",
    "ng://@ngx-share/core/src/share.tokens.ts"
  ],
  "sourcesContent": [
    "import { NgModule, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShareButtons } from './share.service';\nimport { ShareButtonDirective } from './share-button.directive';\nimport { NFormatterPipe } from './n-formatter.pipe';\nimport { ShareButtonsConfig } from './share.models';\nimport { CONFIG } from './share.tokens';\n\nexport function ShareButtonsFactory(config: ShareButtonsConfig) {\n  return new ShareButtons(config);\n}\n\n/** TODO: remove CommonModule */\n@NgModule({\n  declarations: [\n    ShareButtonDirective,\n    NFormatterPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,\n    ShareButtonDirective,\n    NFormatterPipe\n  ]\n})\nexport class ShareModule {\n  static forRoot(config?: ShareButtonsConfig) {\n    return {\n      ngModule: ShareModule,\n      providers: [\n        {provide: CONFIG, useValue: config},\n        {\n          provide: ShareButtons,\n          useFactory: ShareButtonsFactory,\n          deps: [CONFIG]\n        }\n      ]\n    };\n  }\n}\n\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nFormatter'\n})\nexport class NFormatterPipe implements PipeTransform {\n\n  transform(num: any, digits?: any): any {\n\n    if (typeof num !== 'number') {\n      num = 1;\n    }\n\n    return nFormatter(num, digits);\n  }\n\n}\n\n/** Change share counts to a readable number */\nexport const nFormatter = (num: number, digits: number) => {\n\n  const si = [\n    {value: 1E18, symbol: 'E'},\n    {value: 1E15, symbol: 'P'},\n    {value: 1E12, symbol: 'T'},\n    {value: 1E9, symbol: 'G'},\n    {value: 1E6, symbol: 'M'},\n    {value: 1E3, symbol: 'K'}\n  ], rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n\n  for (let i = 0; i < si.length; i++) {\n    if (num >= si[i].value) {\n      return (num / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol;\n    }\n  }\n  return num.toFixed(digits).replace(rx, '$1');\n};\n",
    "import {\n  Directive,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  ElementRef,\n  Renderer2,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { catchError, tap, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport { empty } from 'rxjs/observable/empty';\nimport { of } from 'rxjs/observable/of';\n\nimport { ShareButtons } from './share.service';\nimport { IShareButton, ShareButtonRef } from './share.models';\n\n/** Google analytics ref */\ndeclare const ga: Function;\ndeclare const global: any;\ndeclare const window: any;\n\n@Directive({\n  selector: '[shareButton]'\n})\nexport class ShareButtonDirective {\n\n  /** A ref for window object that works on SSR */\n  window: Window;\n\n  /** Button properties */\n  prop: IShareButton;\n\n  /** The validated share URL */\n  url: string;\n\n  /** Button class - used to remove previous class when the button type is changed */\n  buttonClass: string;\n\n  /** Meta tags inputs - initialized from the global options */\n  @Input() sbTitle = this.shareService.title;\n  @Input() sbDescription = this.shareService.description;\n  @Input() sbImage = this.shareService.image;\n  @Input() sbTags = this.shareService.tags;\n\n  /** Create share button  */\n  @Input('shareButton')\n  set setButton(buttonName: string) {\n\n    /** Create a new button of type <buttonName> */\n    const button = {...this.shareService.prop[buttonName]};\n\n    if (button) {\n\n      /** Set share button */\n      this.prop = button;\n\n      /** Remove previous button class */\n      this.renderer.removeClass(this.el.nativeElement, 'sb-' + this.buttonClass);\n\n      /** Add new button class */\n      this.renderer.addClass(this.el.nativeElement, 'sb-' + button.type);\n\n      /** Keep a copy of the class for future replacement */\n      this.buttonClass = button.type;\n\n      /** Get link's shared count */\n      this.emitCount();\n    } else {\n      throw new Error(`[ShareButtons]: The share button '${buttonName}' does not exist!`);\n    }\n  }\n\n  /** Set share URL */\n  @Input()\n  set sbUrl(newUrl: string) {\n\n    /** Check if new URL is equal the current URL */\n    if (newUrl !== this.url) {\n      this.url = this.getValidURL(newUrl);\n      this.emitCount();\n    }\n  }\n\n  /** Share count event */\n  @Output() sbCount = new EventEmitter<number>();\n\n  /** Share dialog opened event */\n  @Output() sbOpened = new EventEmitter<string>();\n\n  /** Share dialog closed event */\n  @Output() sbClosed = new EventEmitter<string>();\n\n  constructor(private shareService: ShareButtons,\n              private http: HttpClient,\n              public renderer: Renderer2,\n              public cd: ChangeDetectorRef,\n              private el: ElementRef) {\n    this.window = window || global;\n  }\n\n  /**\n   * Share link on element click\n   */\n  @HostListener('click')\n  onClick() {\n    /** Set user did not set the url using [sbUrl], use window URL */\n    if (!this.url) {\n      this.url = encodeURIComponent(this.window.location.href);\n    }\n\n    /** Emit opened share button type */\n    this.sbOpened.emit(this.prop.type);\n\n    const ref: ShareButtonRef = {\n      url: this.url,\n      cd: this.cd,\n      renderer: this.renderer,\n      window: this.window,\n      prop: this.prop,\n      el: this.el.nativeElement,\n      os: this.shareService.os,\n      metaTags: {\n        title: this.sbTitle,\n        description: this.sbDescription,\n        image: this.sbImage,\n        tags: this.sbTags,\n        via: this.shareService.twitterAccount,\n      }\n    };\n\n    /** Share the link */\n    of(ref).pipe(\n      ...this.prop.share.operators,\n      tap((sharerURL: string) => this.share(sharerURL)),\n      take(1)\n    ).subscribe();\n  }\n\n  /**\n   * Emit share count\n   */\n  emitCount() {\n    /** Only if share count has observers & the button has support for share count */\n    if (this.url && this.sbCount.observers.length && this.prop.count) {\n\n      /** Emit share count to (sbCount) Output */\n      this.count(this.url).subscribe((count: number) => this.sbCount.emit(count));\n    }\n  }\n\n  /**\n   * Open sharing window\n   * @param url - Share URL\n   */\n  share(url: string) {\n    let popUp;\n    if (url) {\n\n      /** GA tracking */\n      if (this.shareService.gaTracking && typeof ga !== 'undefined') {\n        ga('send', 'social', this.prop.type, 'click', this.url);\n      }\n\n      popUp = this.window.open(url, 'newwindow', this.shareService.windowSize);\n    }\n\n    /** If dialog closed event has subscribers, emit closed dialog type */\n    if (this.sbClosed.observers.length && popUp) {\n      const pollTimer = this.window.setInterval(() => {\n        if (popUp.closed) {\n          this.window.clearInterval(pollTimer);\n          this.sbClosed.emit(this.prop.type);\n        }\n      }, 200);\n    }\n  }\n\n  /**\n   * Get link share count\n   * @param url - Share URL\n   * @returns Share count\n   */\n  count(url: string): Observable<any> {\n\n    if (this.prop.count.request === 'jsonp') {\n\n      return this.http.jsonp<any>(this.prop.count.url + url, 'callback').pipe(\n        ...this.prop.count.operators,\n        catchError(() => empty()),\n      );\n    } else {\n\n      return this.http.get<any>(this.prop.count.url + url, this.prop.count.args).pipe(\n        ...this.prop.count.operators,\n        catchError(() => empty())\n      );\n    }\n  }\n\n  /**\n   * Get a valid URL for sharing\n   * @param url - URL to validate\n   * @returns Sharable URL\n   */\n  private getValidURL(url: string) {\n\n    if (url) {\n      const r = /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n      if (r.test(url)) {\n        return encodeURIComponent(url);\n      }\n      console.warn(`[ShareButtons]: Sharing link '${url}' is invalid!`);\n    }\n    /** fallback to page current URL */\n    return encodeURIComponent(this.window.location.href);\n  }\n\n}\n",
    "import { Inject, Injectable } from '@angular/core';\nimport { IShareButton, IShareButtons, ShareButtonsConfig, ShareButtonsOptions } from './share.models';\nimport { CONFIG } from './share.tokens';\nimport { shareButtonsProp } from './share.prop';\n\ndeclare const global: any;\ndeclare const window: any;\n\n@Injectable()\nexport class ShareButtons {\n\n  /** List of share buttons */\n  allButtons: string[];\n\n  /** Default options */\n  options: ShareButtonsOptions;\n\n  /** Default properties */\n  prop: IShareButtons;\n\n  /** User OS */\n  os: string;\n\n  constructor(@Inject(CONFIG) config: ShareButtonsConfig) {\n\n    /** Set buttons properties */\n    this.prop = shareButtonsProp;\n\n    /** Set buttons list */\n    this.allButtons = Object.keys(this.prop);\n\n    /** Set default options */\n    this.options = {\n      theme: 'default',\n      include: this.allButtons,\n      exclude: [],\n      size: 0,\n      title: null,\n      image: null,\n      description: null,\n      tags: null,\n      gaTracking: false,\n      twitterAccount: null,\n      windowWidth: 800,\n      windowHeight: 500\n    };\n\n    if (config) {\n      /** Override global options with user's preference */\n      this.options = mergeDeep(this.options, config.options);\n      this.prop = mergeDeep(this.prop, config.prop);\n    }\n\n    /** Get user browser info */\n    this.os = getOS();\n  }\n\n  get twitterAccount() {\n    return this.options.twitterAccount;\n  }\n\n  /**\n   * Get wanted buttons\n   */\n  get buttons() {\n    if (!this.options.exclude.length) {\n      return this.options.include;\n    }\n    return this.options.include.filter((btn) => this.options.exclude.indexOf(btn) < 0);\n  }\n\n  get theme() {\n    return this.options.theme;\n  }\n\n  get windowSize() {\n    return `width=${this.options.windowWidth}, height=${this.options.windowHeight}`;\n  }\n\n  get title() {\n    return this.options.title;\n  }\n\n  get description() {\n    return this.options.description;\n  }\n\n  get image() {\n    return this.options.image;\n  }\n\n  get tags() {\n    return this.options.tags;\n  }\n\n  get gaTracking() {\n    return this.options.gaTracking;\n  }\n\n  get size() {\n    return this.options.size;\n  }\n\n  registerButton(name: string, data: IShareButton) {\n    this.prop = {...shareButtonsProp, ...{[name]: data}};\n    this.allButtons = Object.keys(this.prop);\n  }\n\n}\n\n/**\n * Determine the mobile operating system.\n * This function returns one of 'iOS', 'Android', 'Windows Phone', or 'unknown'.\n */\nfunction getOS() {\n  const userAgent = navigator.userAgent || navigator.vendor || (window || global).opera;\n\n  if (/android/i.test(userAgent)) {\n    return 'android';\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !(window || global).MSStream) {\n    return 'ios';\n  }\n\n  return 'desktop';\n}\n\n/**\n * Simple object check.\n */\nfunction isObject(item) {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deep merge two objects.\n */\nfunction mergeDeep(target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, {[key]: {}});\n        }\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, {[key]: source[key]});\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources);\n}\n",
    "import { map } from 'rxjs/operators';\nimport { noneOperator, metaTagsOperator, printOperator, pinterestOperator, copyOperators } from './share.operators';\nimport { IShareButtons } from './share.models';\n\nexport const shareButtonsProp: IShareButtons = {\n  facebook: {\n    type: 'facebook',\n    text: 'Facebook',\n    icon: 'fa fa-facebook',\n    color: '#3b5998',\n    share: {\n      desktop: 'https://www.facebook.com/sharer/sharer.php?u=',\n      android: 'https://www.facebook.com/sharer/sharer.php?u=',\n      ios: 'https://www.facebook.com/sharer/sharer.php?u=',\n      operators: [noneOperator]\n    },\n    count: {\n      request: 'http',\n      url: 'https://graph.facebook.com?id=',\n      operators: [\n        map((res: any) => +res.share.share_count)\n      ]\n    }\n  },\n  twitter: {\n    type: 'twitter',\n    text: 'Twitter',\n    icon: 'fa fa-twitter',\n    color: '#00acee',\n    share: {\n      desktop: 'https://twitter.com/intent/tweet?url=',\n      android: 'https://twitter.com/intent/tweet?url=',\n      ios: 'https://twitter.com/intent/tweet?url=',\n      operators: [\n        metaTagsOperator\n      ],\n      metaTags: {\n        description: 'text',\n        tags: 'hashtags',\n        via: 'via'\n      }\n    }\n  },\n  google: {\n    type: 'google',\n    text: 'Google+',\n    icon: 'fa fa-google-plus',\n    color: '#DB4437',\n    share: {\n      desktop: 'https://plus.google.com/share?url=',\n      android: 'https://plus.google.com/share?url=',\n      ios: 'https://plus.google.com/share?url=',\n      operators: [noneOperator],\n    }\n  },\n  linkedin: {\n    type: 'linkedin',\n    text: 'LinkedIn',\n    icon: 'fa fa-linkedin',\n    color: '#006fa6',\n    share: {\n      desktop: 'http://www.linkedin.com/shareArticle?url=',\n      android: 'http://www.linkedin.com/shareArticle?url=',\n      ios: 'http://www.linkedin.com/shareArticle?url=',\n      operators: [metaTagsOperator],\n      metaTags: {\n        title: 'title',\n        description: 'summary'\n      },\n    },\n    count: {\n      request: 'jsonp',\n      url: 'https://www.linkedin.com/countserv/count/share?url=',\n      operators: [\n        map((res: any) => +res.count)\n      ]\n    }\n  },\n  pinterest: {\n    type: 'pinterest',\n    text: 'Pinterest',\n    icon: 'fa fa-pinterest-p',\n    color: '#BD091D',\n    share: {\n      desktop: 'https://in.pinterest.com/pin/create/button/?url=',\n      android: 'https://in.pinterest.com/pin/create/button/?url=',\n      ios: 'https://in.pinterest.com/pin/create/button/?url=',\n      operators: [\n        metaTagsOperator,\n        pinterestOperator\n      ],\n      metaTags: {\n        description: 'description',\n        image: 'media'\n      }\n    },\n    count: {\n      request: 'http',\n      url: 'https://api.pinterest.com/v1/urls/count.json?url=',\n      args: {responseType: 'text'},\n      operators: [\n        map((text: string) => JSON.parse(text.replace(/^receiveCount\\((.*)\\)/, '$1'))),\n        map((res: any) => +res.count)\n      ]\n    }\n  },\n  reddit: {\n    type: 'reddit',\n    text: 'Reddit',\n    icon: 'fa fa-reddit-alien',\n    color: '#FF4006',\n    share: {\n      desktop: 'http://www.reddit.com/submit?url=',\n      android: 'http://www.reddit.com/submit?url=',\n      ios: 'http://www.reddit.com/submit?url=',\n      operators: [\n        metaTagsOperator\n      ],\n      metaTags: {\n        title: 'title'\n      },\n    },\n    count: {\n      request: 'http',\n      url: 'https://buttons.reddit.com/button_info.json?url=',\n      operators: [\n        map((res: any) => +res.data.children[0].data.score)\n      ]\n    },\n  },\n  tumblr: {\n    type: 'tumblr',\n    text: 'Tumblr',\n    icon: 'fa fa-tumblr',\n    color: '#36465D',\n    share: {\n      desktop: 'http://tumblr.com/widgets/share/tool?canonicalUrl=',\n      android: 'http://tumblr.com/widgets/share/tool?canonicalUrl=',\n      ios: 'http://tumblr.com/widgets/share/tool?canonicalUrl=',\n      operators: [\n        metaTagsOperator\n      ],\n      metaTags: {\n        description: 'caption',\n        tags: 'tags'\n      }\n    },\n    count: {\n      request: 'jsonp',\n      url: 'https://api.tumblr.com/v2/share/stats?url=',\n      operators: [\n        map((res: any) => +res.response.note_count)\n      ]\n    }\n  },\n  whatsapp: {\n    type: 'whatsapp',\n    text: 'WhatsApp',\n    icon: 'fa fa-whatsapp',\n    color: '#25D366',\n    share: {\n      desktop: 'https://web.whatsapp.com/send?',\n      android: 'https://web.whatsapp.com/send?',\n      ios: 'https://web.whatsapp.com/send?',\n      operators: [metaTagsOperator],\n      metaTags: {\n        description: 'text'\n      }\n    }\n  },\n  telegram: {\n    type: 'telegram',\n    text: 'Telegram',\n    icon: 'fa fa-send',\n    color: '#0088cc',\n    share: {\n      desktop: 'https://t.me/share/url?url=',\n      android: 'https://t.me/share/url?url=',\n      ios: 'https://t.me/share/url?url=',\n      operators: [metaTagsOperator],\n      metaTags: {\n        description: 'text'\n      }\n    }\n  },\n  vk: {\n    type: 'vk',\n    text: 'VKontakte',\n    icon: 'fa fa-vk',\n    color: '#4C75A3',\n    share: {\n      desktop: 'http://vk.com/share.php?url=',\n      android: 'http://vk.com/share.php?url=',\n      ios: 'http://vk.com/share.php?url=',\n      operators: [noneOperator]\n    }\n  },\n  stumble: {\n    type: 'stumble',\n    text: 'Stumble',\n    icon: 'fa fa-stumbleupon',\n    color: '#eb4924',\n    share: {\n      desktop: 'http://www.stumbleupon.com/submit?url=',\n      android: 'http://www.stumbleupon.com/submit?url=',\n      ios: 'http://www.stumbleupon.com/submit?url=',\n      operators: [noneOperator],\n    }\n  },\n  email: {\n    type: 'email',\n    text: 'Email',\n    icon: 'fa fa-envelope',\n    color: '#32A1A3',\n    share: {\n      desktop: 'mailto:?',\n      android: 'mailto:?',\n      ios: 'mailto:?',\n      operators: [metaTagsOperator],\n      metaTags: {\n        title: 'subject',\n        description: 'body'\n      }\n    }\n  },\n  copy: {\n    type: 'copy',\n    text: 'Copy link',\n    successText: 'Copied',\n    successIcon: 'fa fa-check',\n    failText: 'Error',\n    failIcon: 'fa fa-exclamation',\n    icon: 'fa fa-link',\n    color: '#607D8B',\n    share: {\n      operators: copyOperators\n    }\n  },\n  print: {\n    type: 'print',\n    text: 'Print',\n    icon: 'fa fa-print',\n    color: 'brown',\n    share: {\n      operators: [printOperator]\n    }\n  },\n  ok: {\n      type: 'ok',\n      text: 'Odnoclassniki',\n      icon: 'none',\n      color: '#4C75A3',\n      share: {\n          desktop: 'https://connect.ok.ru/dk?st.cmd=WidgetSharePreview&st.shareUrl=',\n          android: 'https://connect.ok.ru/dk?st.cmd=WidgetSharePreview&st.shareUrl=',\n          ios: 'https://connect.ok.ru/dk?st.cmd=WidgetSharePreview&st.shareUrl=',\n          operators: [noneOperator]\n      }\n  },\n};\n",
    "import { map, delay } from 'rxjs/operators';\nimport { ShareButtonRef } from './share.models';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * None operator - just return the sharer URL\n */\nexport const noneOperator = map((ref: ShareButtonRef) => ref.prop.share[ref.os] + ref.url);\n\n/**\n * Meta tags operator - Serialize meta tags in the sharer URL\n */\nexport const metaTagsOperator = map((ref: ShareButtonRef) => {\n\n  /** Social network supported meta tags */\n  const metaTags = ref.prop.share.metaTags;\n\n  /** User meta tags values */\n  const metaTagsValues = ref.metaTags;\n\n  /** Social network sharer URL */\n  const SharerURL = ref.prop.share[ref.os];\n\n  /** User share link */\n  let link = ref.url;\n\n  /** Loop over meta tags */\n  if (metaTags) {\n    Object.keys(metaTags).map((key) => {\n      if (metaTagsValues[key]) {\n        link += `&${metaTags[key]}=${metaTagsValues[key]}`;\n      }\n    });\n  }\n  return SharerURL + link;\n});\n\n/**\n * Print button operator\n */\nexport const printOperator = map((ref: ShareButtonRef) => ref.window.print());\n\n/**\n * Pinterest operator - Since Pinterest requires the description and image meta tags,\n * this function checks if the meta tags are presented, if not it falls back to page meta tags\n * This should placed after the metaTagsOperator\n */\nexport const pinterestOperator = map((url: string) => {\n  if (!url.includes('&description')) {\n    /** If user didn't add description, get it from the OG meta tag */\n    const ogDescription: Element = document.querySelector(`meta[property=\"og:description\"]`);\n    if (ogDescription) {\n      url += '&description=' + ogDescription.getAttribute('content');\n    } else {\n      console.warn(`[ShareButtons]: You didn't set the description text for Pinterest button`);\n    }\n  }\n  if (!url.includes('&media')) {\n    const ogImage: Element = document.querySelector(`meta[property=\"og:image\"]`);\n    if (ogImage) {\n      url += '&media=' + ogImage.getAttribute('content');\n    } else {\n      console.warn(`[ShareButtons]: You didn't set the image URL for Pinterest button`);\n    }\n  }\n  return url;\n});\n\n/**\n * Copy button operator - to copy link to clipboard\n */\nexport const copyOperators = [\n  map((ref: ShareButtonRef) => {\n\n    /** Disable button click */\n    ref.renderer.setStyle(ref.el, 'pointer-events', 'none');\n\n    ref.temp = {text: ref.prop.text, icon: ref.prop.icon};\n    const link = decodeURIComponent(ref.url);\n\n    /** Create a hidden textarea element */\n    const textArea = ref.renderer.createElement('textarea');\n    textArea.style.position = 'fixed';\n    textArea.style.top = 0;\n    textArea.style.left = 0;\n    textArea.style.width = '2em';\n    textArea.style.height = '2em';\n    textArea.style.padding = 0;\n    textArea.style.border = 'none';\n    textArea.style.outline = 'none';\n    textArea.style.boxShadow = 'none';\n    textArea.style.background = 'transparent';\n    textArea.value = link;\n\n    ref.renderer.appendChild(ref.el, textArea);\n\n    /** highlight and copy the text */\n    textArea.select();\n    document.execCommand('copy');\n\n    ref.renderer.removeChild(ref.el, textArea);\n\n    /** Set success text and icon on button */\n    ref.prop.text = ref.prop.successText;\n    ref.prop.icon = ref.prop.successIcon;\n    ref.cd.markForCheck();\n\n    return ref;\n  }, (ref: ShareButtonRef) => {\n\n    /** Set error text and icon on button */\n    ref.prop.text = ref.prop.failText;\n    ref.prop.icon = ref.prop.failIcon;\n    ref.cd.markForCheck();\n    console.warn('[ShareButtons]: Print button could not copy URL to clipboard');\n  }),\n  delay(2000),\n  map((ref: ShareButtonRef) => {\n\n    /** Enable button click */\n    ref.renderer.setStyle(ref.el, 'pointer-events', 'auto');\n\n    /** Set the default text and icon back */\n    ref.prop.text = ref.temp.text;\n    ref.prop.icon = ref.temp.icon;\n    ref.cd.markForCheck();\n  })\n];\n",
    "import { InjectionToken } from '@angular/core';\nimport { ShareButtonsConfig } from './share.models';\n\nexport const CONFIG = new InjectionToken<ShareButtonsConfig>('CONFIG');\n"
  ],
  "names": [
    "empty",
    "of",
    "http"
  ],
  "mappings": "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"
}
